name: build
on:
  push:
    branches:
      - deploy-devtest
jobs:
  all-in-one:
    name: Aqua scanner
    runs-on: ubuntu-latest
    environment: devtest
    env:
      DOCKER_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKER_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
      REGISTRY: ${{ secrets.REGISTRY }}
      REPOSITORY: ${{ secrets.REPOSITORY }}
      IMAGE_TAG: ${{ github.sha }}
      AQUA_KEY: ${{ secrets.AQUA_KEY }}
      AQUA_SECRET: ${{ secrets.AQUA_SECRET }}
      GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      TRIVY_RUN_AS_PLUGIN: 'aqua'
      AQUA_URL: https://api.asia-1.supply-chain.cloud.aquasec.com
      CSPM_URL: https://asia-1.api.cloudsploit.com
      
    permissions:
        id-token: write
    
    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@v10
        with:
          root-reserve-mb: 32768 # The Go cache (`~/.cache/go-build` and `~/go/pkg`) requires a lot of storage space.
          remove-android: 'true'
          remove-docker-images: 'true'
          remove-dotnet: 'true'
          remove-haskell: 'true'
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Run Aqua scanner
        uses: docker://aquasec/aqua-scanner
        with:
          args: trivy -d fs --scanners config,vuln,secret . --sast
          # To customize which severities to scan for, add the following flag: --severity UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL
          # To enable SAST scanning, add: --sast
          # To enable npm/dotnet non-lock file scanning, add: --package-json / --dotnet-proj   
      - name: Build image locally
        run: |
          docker build -t "$REGISTRY/$REPOSITORY:$IMAGE_TAG" .
      - name: Manifest Generation
        run: |
          curl -sLo install.sh download.codesec.aquasec.com/billy/install.sh
          curl -sLo install.sh.checksum https://github.com/argonsecurity/releases/releases/latest/download/install.sh.checksum
          if ! cat install.sh.checksum | shasum -a 256 ; then
            echo "install.sh checksum failed"
            exit 1
          fi
          sh install.sh
          rm install.sh install.sh.checksum
          billy generate \
              --access-token "$GITHUB_TOKEN" \
              --aqua-key "$AQUA_KEY" \
              --aqua-secret "$AQUA_SECRET" \
              --artifact-path "$REGISTRY/$REPOSITORY:$IMAGE_TAG"
      - name: Tag and push image
        run: |
          echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
          docker tag $REGISTRY/$REPOSITORY:$IMAGE_TAG $REGISTRY/$REPOSITORY:latest
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
          docker push $REGISTRY/$REPOSITORY:latest
